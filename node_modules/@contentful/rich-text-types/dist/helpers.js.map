{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../src/helpers.ts"],"names":[],"mappings":";;AAqBA,4BAEC;AAKD,0BAEC;AAKD,wBAEC;AArCD,mCAAkC;AAClC,qCAAoC;AAGpC;;;GAGG;AACH,SAAS,QAAQ,CAAC,GAA4B,EAAE,KAAc;IAC5D,KAAkB,UAAgB,EAAhB,KAAA,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAhB,cAAgB,EAAhB,IAAgB,EAAE,CAAC;QAAhC,IAAM,GAAG,SAAA;QACZ,IAAI,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;YACvB,OAAO,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAED,OAAO,KAAK,CAAC;AACf,CAAC;AAED;;GAEG;AACH,SAAgB,QAAQ,CAAC,IAAU;IACjC,OAAO,QAAQ,CAAC,iBAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC1C,CAAC;AAED;;GAEG;AACH,SAAgB,OAAO,CAAC,IAAU;IAChC,OAAO,QAAQ,CAAC,eAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AACzC,CAAC;AAED;;GAEG;AACH,SAAgB,MAAM,CAAC,IAAU;IAC/B,OAAO,IAAI,CAAC,QAAQ,KAAK,MAAM,CAAC;AAClC,CAAC","sourcesContent":["import { BLOCKS } from './blocks';\nimport { INLINES } from './inlines';\nimport { Block, Inline, Node, Text } from './types';\n\n/**\n * Tiny replacement for Object.values(object).includes(key) to\n * avoid including CoreJS polyfills\n */\nfunction hasValue(obj: Record<string, unknown>, value: unknown) {\n  for (const key of Object.keys(obj)) {\n    if (value === obj[key]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Checks if the node is an instance of Inline.\n */\nexport function isInline(node: Node): node is Inline {\n  return hasValue(INLINES, node.nodeType);\n}\n\n/**\n * Checks if the node is an instance of Block.\n */\nexport function isBlock(node: Node): node is Block {\n  return hasValue(BLOCKS, node.nodeType);\n}\n\n/**\n * Checks if the node is an instance of Text.\n */\nexport function isText(node: Node): node is Text {\n  return node.nodeType === 'text';\n}\n"]}