{"version":3,"file":"schemaConstraints.js","sourceRoot":"","sources":["../src/schemaConstraints.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,mCAAkC;AAClC,qCAAoC;AACpC,iCAAgC;AAmBhC;;;GAGG;AACU,QAAA,gBAAgB,GAAwB;IACnD,eAAM,CAAC,SAAS;IAChB,eAAM,CAAC,SAAS;IAChB,eAAM,CAAC,SAAS;IAChB,eAAM,CAAC,SAAS;IAChB,eAAM,CAAC,SAAS;IAChB,eAAM,CAAC,SAAS;IAChB,eAAM,CAAC,SAAS;IAChB,eAAM,CAAC,OAAO;IACd,eAAM,CAAC,OAAO;IACd,eAAM,CAAC,EAAE;IACT,eAAM,CAAC,KAAK;IACZ,eAAM,CAAC,cAAc;IACrB,eAAM,CAAC,cAAc;IACrB,eAAM,CAAC,iBAAiB;IACxB,eAAM,CAAC,KAAK;CACb,CAAC;AAkBF;;GAEG;AACU,QAAA,gBAAgB,GAAwB;IACnD,eAAM,CAAC,SAAS;IAChB,eAAM,CAAC,SAAS;IAChB,eAAM,CAAC,SAAS;IAChB,eAAM,CAAC,SAAS;IAChB,eAAM,CAAC,SAAS;IAChB,eAAM,CAAC,SAAS;IAChB,eAAM,CAAC,SAAS;IAChB,eAAM,CAAC,OAAO;IACd,eAAM,CAAC,OAAO;IACd,eAAM,CAAC,EAAE;IACT,eAAM,CAAC,KAAK;IACZ,eAAM,CAAC,cAAc;IACrB,eAAM,CAAC,cAAc;IACrB,eAAM,CAAC,iBAAiB;CACzB,CAAC;AAEW,QAAA,YAAY,GAAG;IAC1B,eAAM,CAAC,KAAK;IACZ,eAAM,CAAC,SAAS;IAChB,eAAM,CAAC,UAAU;IACjB,eAAM,CAAC,iBAAiB;CACzB,CAAC;AAEF;;GAEG;AACU,QAAA,WAAW,GAAG;IACzB,eAAM,CAAC,EAAE;IACT,eAAM,CAAC,cAAc;IACrB,eAAM,CAAC,cAAc;IACrB,eAAM,CAAC,iBAAiB;CACzB,CAAC;AAEF;;;;GAIG;AACU,QAAA,UAAU;IACrB,GAAC,eAAM,CAAC,OAAO,IAAG,CAAC,eAAM,CAAC,SAAS,CAAC;IACpC,GAAC,eAAM,CAAC,OAAO,IAAG,CAAC,eAAM,CAAC,SAAS,CAAC;IACpC,GAAC,eAAM,CAAC,SAAS,IAAG,wBAAgB;IACpC,GAAC,eAAM,CAAC,KAAK,IAAG,CAAC,eAAM,CAAC,SAAS,CAAC;IAClC,GAAC,eAAM,CAAC,KAAK,IAAG,CAAC,eAAM,CAAC,SAAS,CAAC;IAClC,GAAC,eAAM,CAAC,SAAS,IAAG,CAAC,eAAM,CAAC,UAAU,EAAE,eAAM,CAAC,iBAAiB,CAAC;IACjE,GAAC,eAAM,CAAC,UAAU,IAAG,CAAC,eAAM,CAAC,SAAS,EAAE,eAAM,CAAC,OAAO,EAAE,eAAM,CAAC,OAAO,CAAC;IACvE,GAAC,eAAM,CAAC,iBAAiB,IAAG,CAAC,eAAM,CAAC,SAAS,CAAC;QAC9C;AAEF;;GAEG;AACU,QAAA,QAAQ,GAAG;IACtB,eAAM,CAAC,SAAS;IAChB,eAAM,CAAC,SAAS;IAChB,eAAM,CAAC,SAAS;IAChB,eAAM,CAAC,SAAS;IAChB,eAAM,CAAC,SAAS;IAChB,eAAM,CAAC,SAAS;CACjB,CAAC;AAEF;;GAEG;AACU,QAAA,eAAe,kBAAI,eAAM,CAAC,SAAS,GAAK,gBAAQ,QAAE;AAE/D;;GAEG;AACU,QAAA,aAAa,GAAG;IAC3B,eAAM,CAAC,QAAQ;IACf,eAAM,CAAC,SAAS;IAChB,eAAM,CAAC,SAAS;IAChB,eAAM,CAAC,SAAS;IAChB,eAAM,CAAC,SAAS;IAChB,eAAM,CAAC,SAAS;IAChB,eAAM,CAAC,SAAS;IAChB,eAAM,CAAC,SAAS;IAChB,eAAM,CAAC,OAAO;IACd,eAAM,CAAC,OAAO;IACd,eAAM,CAAC,SAAS;IAChB,eAAM,CAAC,EAAE;IACT,eAAM,CAAC,KAAK;IACZ,eAAM,CAAC,cAAc;IACrB,eAAM,CAAC,cAAc;IACrB,iBAAO,CAAC,SAAS;IACjB,iBAAO,CAAC,eAAe;IACvB,iBAAO,CAAC,eAAe;IACvB,iBAAO,CAAC,cAAc;IACtB,MAAM;CACP,CAAC;AAEF;;GAEG;AACU,QAAA,QAAQ,GAAG,CAAC,aAAK,CAAC,IAAI,EAAE,aAAK,CAAC,IAAI,EAAE,aAAK,CAAC,MAAM,EAAE,aAAK,CAAC,SAAS,CAAC,CAAC","sourcesContent":["import { BLOCKS } from './blocks';\nimport { INLINES } from './inlines';\nimport { MARKS } from './marks';\n\nexport type TopLevelBlockEnum =\n  | BLOCKS.PARAGRAPH\n  | BLOCKS.HEADING_1\n  | BLOCKS.HEADING_2\n  | BLOCKS.HEADING_3\n  | BLOCKS.HEADING_4\n  | BLOCKS.HEADING_5\n  | BLOCKS.HEADING_6\n  | BLOCKS.OL_LIST\n  | BLOCKS.UL_LIST\n  | BLOCKS.HR\n  | BLOCKS.QUOTE\n  | BLOCKS.EMBEDDED_ENTRY\n  | BLOCKS.EMBEDDED_ASSET\n  | BLOCKS.EMBEDDED_RESOURCE\n  | BLOCKS.TABLE;\n\n/**\n * Array of all top level block types.\n * Only these block types can be the direct children of the document.\n */\nexport const TOP_LEVEL_BLOCKS: TopLevelBlockEnum[] = [\n  BLOCKS.PARAGRAPH,\n  BLOCKS.HEADING_1,\n  BLOCKS.HEADING_2,\n  BLOCKS.HEADING_3,\n  BLOCKS.HEADING_4,\n  BLOCKS.HEADING_5,\n  BLOCKS.HEADING_6,\n  BLOCKS.OL_LIST,\n  BLOCKS.UL_LIST,\n  BLOCKS.HR,\n  BLOCKS.QUOTE,\n  BLOCKS.EMBEDDED_ENTRY,\n  BLOCKS.EMBEDDED_ASSET,\n  BLOCKS.EMBEDDED_RESOURCE,\n  BLOCKS.TABLE,\n];\n\nexport type ListItemBlockEnum =\n  | BLOCKS.PARAGRAPH\n  | BLOCKS.HEADING_1\n  | BLOCKS.HEADING_2\n  | BLOCKS.HEADING_3\n  | BLOCKS.HEADING_4\n  | BLOCKS.HEADING_5\n  | BLOCKS.HEADING_6\n  | BLOCKS.OL_LIST\n  | BLOCKS.UL_LIST\n  | BLOCKS.HR\n  | BLOCKS.QUOTE\n  | BLOCKS.EMBEDDED_ENTRY\n  | BLOCKS.EMBEDDED_ASSET\n  | BLOCKS.EMBEDDED_RESOURCE;\n\n/**\n * Array of all allowed block types inside list items\n */\nexport const LIST_ITEM_BLOCKS: TopLevelBlockEnum[] = [\n  BLOCKS.PARAGRAPH,\n  BLOCKS.HEADING_1,\n  BLOCKS.HEADING_2,\n  BLOCKS.HEADING_3,\n  BLOCKS.HEADING_4,\n  BLOCKS.HEADING_5,\n  BLOCKS.HEADING_6,\n  BLOCKS.OL_LIST,\n  BLOCKS.UL_LIST,\n  BLOCKS.HR,\n  BLOCKS.QUOTE,\n  BLOCKS.EMBEDDED_ENTRY,\n  BLOCKS.EMBEDDED_ASSET,\n  BLOCKS.EMBEDDED_RESOURCE,\n];\n\nexport const TABLE_BLOCKS = [\n  BLOCKS.TABLE,\n  BLOCKS.TABLE_ROW,\n  BLOCKS.TABLE_CELL,\n  BLOCKS.TABLE_HEADER_CELL,\n];\n\n/**\n * Array of all void block types\n */\nexport const VOID_BLOCKS = [\n  BLOCKS.HR,\n  BLOCKS.EMBEDDED_ENTRY,\n  BLOCKS.EMBEDDED_ASSET,\n  BLOCKS.EMBEDDED_RESOURCE,\n];\n\n/**\n * Dictionary of all container block types, and the set block types they accept as children.\n *\n * Note: This does not include `[BLOCKS.DOCUMENT]: TOP_LEVEL_BLOCKS`\n */\nexport const CONTAINERS = {\n  [BLOCKS.OL_LIST]: [BLOCKS.LIST_ITEM],\n  [BLOCKS.UL_LIST]: [BLOCKS.LIST_ITEM],\n  [BLOCKS.LIST_ITEM]: LIST_ITEM_BLOCKS,\n  [BLOCKS.QUOTE]: [BLOCKS.PARAGRAPH],\n  [BLOCKS.TABLE]: [BLOCKS.TABLE_ROW],\n  [BLOCKS.TABLE_ROW]: [BLOCKS.TABLE_CELL, BLOCKS.TABLE_HEADER_CELL],\n  [BLOCKS.TABLE_CELL]: [BLOCKS.PARAGRAPH, BLOCKS.UL_LIST, BLOCKS.OL_LIST],\n  [BLOCKS.TABLE_HEADER_CELL]: [BLOCKS.PARAGRAPH],\n};\n\n/**\n * Array of all heading levels\n */\nexport const HEADINGS = [\n  BLOCKS.HEADING_1,\n  BLOCKS.HEADING_2,\n  BLOCKS.HEADING_3,\n  BLOCKS.HEADING_4,\n  BLOCKS.HEADING_5,\n  BLOCKS.HEADING_6,\n];\n\n/**\n * Array of all block types that may contain text and inline nodes.\n */\nexport const TEXT_CONTAINERS = [BLOCKS.PARAGRAPH, ...HEADINGS];\n\n/**\n * Node types before `tables` release.\n */\nexport const V1_NODE_TYPES = [\n  BLOCKS.DOCUMENT,\n  BLOCKS.PARAGRAPH,\n  BLOCKS.HEADING_1,\n  BLOCKS.HEADING_2,\n  BLOCKS.HEADING_3,\n  BLOCKS.HEADING_4,\n  BLOCKS.HEADING_5,\n  BLOCKS.HEADING_6,\n  BLOCKS.OL_LIST,\n  BLOCKS.UL_LIST,\n  BLOCKS.LIST_ITEM,\n  BLOCKS.HR,\n  BLOCKS.QUOTE,\n  BLOCKS.EMBEDDED_ENTRY,\n  BLOCKS.EMBEDDED_ASSET,\n  INLINES.HYPERLINK,\n  INLINES.ENTRY_HYPERLINK,\n  INLINES.ASSET_HYPERLINK,\n  INLINES.EMBEDDED_ENTRY,\n  'text',\n];\n\n/**\n * Marks before `superscript` & `subscript` release.\n */\nexport const V1_MARKS = [MARKS.BOLD, MARKS.CODE, MARKS.ITALIC, MARKS.UNDERLINE];\n"]}