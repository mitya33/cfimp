{"version":3,"file":"types.js","sourceRoot":"","sources":["../src/types.ts"],"names":[],"mappings":"","sourcesContent":["import { BLOCKS } from './blocks';\nimport { INLINES } from './inlines';\nimport { ListItemBlockEnum, TopLevelBlockEnum } from './schemaConstraints';\n\n/**\n * @additionalProperties true\n */\nexport type NodeData = Record<string, any>;\nexport interface Node {\n  readonly nodeType: string;\n\n  data: NodeData;\n}\n\nexport interface Block extends Node {\n  nodeType: BLOCKS;\n  content: Array<Block | Inline | Text>;\n}\n\nexport interface Inline extends Node {\n  nodeType: INLINES;\n  content: Array<Inline | Text>;\n}\n\nexport interface TopLevelBlock extends Block {\n  nodeType: TopLevelBlockEnum;\n}\n\nexport interface Document extends Node {\n  nodeType: BLOCKS.DOCUMENT;\n  content: TopLevelBlock[];\n}\n\nexport interface Text extends Node {\n  nodeType: 'text';\n  value: string;\n  marks: Mark[];\n}\n\nexport interface Mark {\n  type: string;\n}\n\nexport interface ListItemBlock extends Block {\n  nodeType: ListItemBlockEnum;\n}\n"]}