{"version":3,"file":"path.js","sourceRoot":"","sources":["../../src/validator/path.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA;IACE,cAA6B,IAA8B;QAA9B,qBAAA,EAAA,SAA8B;QAA3D,iBAA+D;QAAlC,SAAI,GAAJ,IAAI,CAA0B;QAE3D,OAAE,GAAG,UAAC,OAAwB;YAC5B,OAAO,IAAI,IAAI,iCAAK,KAAI,CAAC,IAAI,UAAE,OAAO,UAAE,CAAC;QAC3C,CAAC,CAAC;QAEF,WAAM,GAAG;YACP,OAAO,KAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC;QAChC,CAAC,CAAC;QAEF,SAAI,GAAG;YACL,OAAO,KAAI,CAAC,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACzC,CAAC,CAAC;QAEF,YAAO,GAAG;YACR,OAAO,KAAI,CAAC,IAAI,CAAC;QACnB,CAAC,CAAC;IAhB4D,CAAC;IAiBjE,WAAC;AAAD,CAAC,AAlBD,IAkBC;AAlBY,oBAAI","sourcesContent":["export class Path {\n  constructor(private readonly path: (string | number)[] = []) {}\n\n  of = (element: string | number): Path => {\n    return new Path([...this.path, element]);\n  };\n\n  isRoot = (): boolean => {\n    return this.path.length === 0;\n  };\n\n  last = (): string | number | undefined => {\n    return this.path[this.path.length - 1];\n  };\n\n  toArray = (): (string | number)[] => {\n    return this.path;\n  };\n}\n"]}