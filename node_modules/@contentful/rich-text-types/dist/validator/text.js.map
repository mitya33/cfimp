{"version":3,"file":"text.js","sourceRoot":"","sources":["../../src/validator/text.ts"],"names":[],"mappings":";;AAKA,gCA4BC;AA/BD,mCAA2C;AAG3C,SAAgB,UAAU,CAAC,IAAU,EAAE,IAAU;IAC/C,IAAM,CAAC,GAAG,IAAI,wBAAe,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAE1C,IAAI,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC;QAChB,OAAO,CAAC,CAAC,MAAM,CAAC;IAClB,CAAC;IAED,CAAC,CAAC,sBAAsB,CAAC,CAAC,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;IAEjE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACjB,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,IAAI,EAAE,IAAI;QACzB,IAAM,KAAK,GAAG,IAAI,wBAAe,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAE9C,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC;YACpB,OAAO,KAAK,CAAC,MAAM,CAAC;QACtB,CAAC;QAED,wEAAwE;QACxE,wEAAwE;QACxE,eAAe;QACf,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAErB,OAAO,KAAK,CAAC,MAAM,CAAC;IACtB,CAAC,CAAC,CAAC;IAEH,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAElB,OAAO,CAAC,CAAC,MAAM,CAAC;AAClB,CAAC","sourcesContent":["import { ValidationError } from '.';\nimport { Text } from '../types';\nimport { ObjectAssertion } from './assert';\nimport type { Path } from './path';\n\nexport function assertText(text: Text, path: Path): ValidationError[] {\n  const $ = new ObjectAssertion(text, path);\n\n  if (!$.object()) {\n    return $.errors;\n  }\n\n  $.noAdditionalProperties(['nodeType', 'data', 'value', 'marks']);\n\n  $.object('data');\n  $.each('marks', (mark, path) => {\n    const mark$ = new ObjectAssertion(mark, path);\n\n    if (!mark$.object()) {\n      return mark$.errors;\n    }\n\n    // For historical reasons, we don't explicitly check for supported marks\n    // e.g. bold, italic ..etc. This makes it possible for a customer to add\n    // custom marks\n    mark$.string('type');\n\n    return mark$.errors;\n  });\n\n  $.string('value');\n\n  return $.errors;\n}\n"]}